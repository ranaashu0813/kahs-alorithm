{
    //with the help of bfs 
	public:
	//Function to return list containing vertices in Topological order. 
	vector<int> topoSort(int V, vector<int> adj[]) 
	{
	    vector<int>ans; 
	    queue<int>q; 
	    vector<int>indegree(V+1,0);
	    for(int i=0; i<V; i++){
	        vector<int>data = adj[i]; 
	       for(auto x:data){
	           //this one is the indegree to find the number of data is has indegree 
	 //minum the number of indegree easy to count if the indegree is manunun then we
	 //will no store data until it will not become zero          
	            indegree[x]++; 
	            
	       }
	       
	    }
	    //from above situation we got all the indegree of that data 
	    
	//jiski sbse kam indegree he will allow to print     
	    for (int i=0;i<V ;i++){
	        if (indegree[i]==0){
	            q.push(i);
	        }
	        while(!q.empty()){
	            int u =q.front();
	            
	            q.pop();
	            ans.push_back(u);
	            
	            for(auto v :adj[u]){
	                
	                indegree[v]--; 
	                
	                if (indegree[v]==0){
	                    q.push(v);
	                }
	            }
	        }
	    }
	    return ans; 
	   
	}
